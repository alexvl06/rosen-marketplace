{"ast":null,"code":"export class Page {\n  constructor(items, pageIndex, pageCount) {\n    this.items = items;\n    this.pageIndex = pageIndex;\n    this.pageCount = pageCount;\n  }\n  get Items() {\n    return this.items;\n  }\n  get PageIndex() {\n    return this.pageIndex;\n  }\n  get nextIndex() {\n    if (this.pageIndex + 1 > this.pageCount) {\n      return null;\n    }\n    return this.pageIndex + 1;\n  }\n  get PageCount() {\n    return this.pageCount;\n  }\n  get previousIndex() {\n    if (this.pageIndex - 1 < 1) {\n      return null;\n    }\n    return this.pageIndex - 1;\n  }\n  set PageIndex(index) {\n    this.pageIndex = index;\n  }\n  getNextPageIndexes() {\n    let start = this.pageIndex + 1;\n    let end = this.pageIndex + 3;\n    if (start > this.pageCount) {\n      return null;\n    }\n    if (end > this.pageCount) {\n      while (end > this.pageCount) {\n        end--;\n      }\n    }\n    return this.createNumberArray(start, end);\n  }\n  getPreviousPageIndexes() {\n    let end = this.pageIndex - 1;\n    let start = this.pageIndex - 3;\n    if (end < 1) {\n      return null;\n    }\n    if (start < 1) {\n      while (start < 1) {\n        start++;\n      }\n    }\n    return this.createNumberArray(start, end);\n  }\n  createNumberArray(start, end) {\n    return Array.from({\n      length: end - start + 1\n    }, (_, index) => start + index);\n  }\n}","map":{"version":3,"names":["Page","constructor","items","pageIndex","pageCount","Items","PageIndex","nextIndex","PageCount","previousIndex","index","getNextPageIndexes","start","end","createNumberArray","getPreviousPageIndexes","Array","from","length","_"],"sources":["C:\\Users\\Alexis Avila\\Documents\\codigo\\marketplace\\WebApp\\marketplace\\src\\app\\core\\models\\page.model.ts"],"sourcesContent":["export class Page<T> {\r\n  private items:T[]\r\n  private pageIndex:number\r\n  private pageCount:number\r\n\r\n  constructor(items:T[], pageIndex:number, pageCount:number){\r\n    this.items = items\r\n    this.pageIndex = pageIndex\r\n    this.pageCount = pageCount\r\n  }\r\n    get Items():T[]{\r\n      return this.items\r\n    }\r\n\r\n    get PageIndex(){\r\n      return this.pageIndex\r\n    }\r\n\r\n    get nextIndex(){\r\n      if(this.pageIndex+1 >this.pageCount){\r\n        return null\r\n      }\r\n      return this.pageIndex+1;\r\n    }\r\n\r\n    get PageCount(){\r\n      return this.pageCount\r\n    }\r\n\r\n    get previousIndex(){\r\n      if(this.pageIndex-1<1){\r\n        return null\r\n      }\r\n      return this.pageIndex-1;\r\n    }\r\n\r\n    set PageIndex(index:number){\r\n      this.pageIndex = index\r\n    }\r\n\r\n    getNextPageIndexes():number[]{\r\n      let start = this.pageIndex+1;\r\n      let end = this.pageIndex+3;\r\n      if(start>this.pageCount){\r\n        return null\r\n      }\r\n      if(end>this.pageCount){\r\n        while(end>this.pageCount){\r\n          end --\r\n        }\r\n      }\r\n      return this.createNumberArray(start,end)\r\n    }\r\n\r\n    getPreviousPageIndexes():number[]{\r\n      let end = this.pageIndex-1;\r\n      let start = this.pageIndex-3;\r\n      if(end<1){\r\n        return null\r\n      }\r\n      if(start<1){\r\n        while(start<1){\r\n          start ++\r\n        }\r\n      }\r\n      return this.createNumberArray(start,end)\r\n    }\r\n\r\n\r\n\r\n  private createNumberArray(start:number, end:number){\r\n    return Array.from({length:end-start+1},(_,index)=>start+index)\r\n  }\r\n\r\n}\r\n"],"mappings":"AAAA,OAAM,MAAOA,IAAI;EAKfC,YAAYC,KAAS,EAAEC,SAAgB,EAAEC,SAAgB;IACvD,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC5B;EACE,IAAIC,KAAKA,CAAA;IACP,OAAO,IAAI,CAACH,KAAK;EACnB;EAEA,IAAII,SAASA,CAAA;IACX,OAAO,IAAI,CAACH,SAAS;EACvB;EAEA,IAAII,SAASA,CAAA;IACX,IAAG,IAAI,CAACJ,SAAS,GAAC,CAAC,GAAE,IAAI,CAACC,SAAS,EAAC;MAClC,OAAO,IAAI;;IAEb,OAAO,IAAI,CAACD,SAAS,GAAC,CAAC;EACzB;EAEA,IAAIK,SAASA,CAAA;IACX,OAAO,IAAI,CAACJ,SAAS;EACvB;EAEA,IAAIK,aAAaA,CAAA;IACf,IAAG,IAAI,CAACN,SAAS,GAAC,CAAC,GAAC,CAAC,EAAC;MACpB,OAAO,IAAI;;IAEb,OAAO,IAAI,CAACA,SAAS,GAAC,CAAC;EACzB;EAEA,IAAIG,SAASA,CAACI,KAAY;IACxB,IAAI,CAACP,SAAS,GAAGO,KAAK;EACxB;EAEAC,kBAAkBA,CAAA;IAChB,IAAIC,KAAK,GAAG,IAAI,CAACT,SAAS,GAAC,CAAC;IAC5B,IAAIU,GAAG,GAAG,IAAI,CAACV,SAAS,GAAC,CAAC;IAC1B,IAAGS,KAAK,GAAC,IAAI,CAACR,SAAS,EAAC;MACtB,OAAO,IAAI;;IAEb,IAAGS,GAAG,GAAC,IAAI,CAACT,SAAS,EAAC;MACpB,OAAMS,GAAG,GAAC,IAAI,CAACT,SAAS,EAAC;QACvBS,GAAG,EAAG;;;IAGV,OAAO,IAAI,CAACC,iBAAiB,CAACF,KAAK,EAACC,GAAG,CAAC;EAC1C;EAEAE,sBAAsBA,CAAA;IACpB,IAAIF,GAAG,GAAG,IAAI,CAACV,SAAS,GAAC,CAAC;IAC1B,IAAIS,KAAK,GAAG,IAAI,CAACT,SAAS,GAAC,CAAC;IAC5B,IAAGU,GAAG,GAAC,CAAC,EAAC;MACP,OAAO,IAAI;;IAEb,IAAGD,KAAK,GAAC,CAAC,EAAC;MACT,OAAMA,KAAK,GAAC,CAAC,EAAC;QACZA,KAAK,EAAG;;;IAGZ,OAAO,IAAI,CAACE,iBAAiB,CAACF,KAAK,EAACC,GAAG,CAAC;EAC1C;EAIMC,iBAAiBA,CAACF,KAAY,EAAEC,GAAU;IAChD,OAAOG,KAAK,CAACC,IAAI,CAAC;MAACC,MAAM,EAACL,GAAG,GAACD,KAAK,GAAC;IAAC,CAAC,EAAC,CAACO,CAAC,EAACT,KAAK,KAAGE,KAAK,GAACF,KAAK,CAAC;EAChE"},"metadata":{},"sourceType":"module","externalDependencies":[]}